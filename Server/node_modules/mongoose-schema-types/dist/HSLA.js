"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const HSLA_REGEX = /^hsla\(\s*(-?\d+|-?\d*.\d+)\s*,\s*(-?\d+|-?\d*.\d+)%\s*,\s*(-?\d+|-?\d*.\d+)%\s*,\s*(-?\d+|-?\d*.\d+)\s*\)$/;
const validate = (value) => {
    if (typeof value !== "string") {
        throw mongoose.SchemaType.CastError("HSLA", `Value is not string: ${value}`);
    }
    if (!HSLA_REGEX.test(value)) {
        throw mongoose.SchemaType.CastError("HSLA", `Value is not a valid HSLA color: ${value}`);
    }
    return value;
};
class HSLA extends mongoose.SchemaType {
    constructor(key, options) {
        super(key, options, "HSLA");
    }
    cast(val) {
        validate(val);
        return val;
    }
}
HSLA.instance = "HSLA";
mongoose.Schema.Types.HSLA = HSLA;
exports.default = HSLA;
