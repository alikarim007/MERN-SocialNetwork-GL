"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const RGB_REGEX = /^rgb\(\s*(-?\d+|-?\d*\.\d+(?=%))(%?)\s*,\s*(-?\d+|-?\d*\.\d+(?=%))(\2)\s*,\s*(-?\d+|-?\d*\.\d+(?=%))(\2)\s*\)$/;
const validate = (value) => {
    if (typeof value !== "string") {
        throw mongoose.SchemaType.CastError("RGB", `Value is not string: ${value}`);
    }
    if (!RGB_REGEX.test(value)) {
        throw mongoose.SchemaType.CastError("RGB", `Value is not a valid RGB color: ${value}`);
    }
    return value;
};
class RGB extends mongoose.SchemaType {
    constructor(key, options) {
        super(key, options, "RGB");
    }
    cast(val) {
        validate(val);
        return val;
    }
}
RGB.instance = "RGB";
mongoose.Schema.Types.RGB = RGB;
exports.default = RGB;
