"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const validate = (value) => {
    const HEXADECIMAL_REGEX = /^[a-f0-9]+$/i;
    if (typeof value !== "string") {
        throw mongoose.SchemaType.CastError("Hexadecimal", `Value is not string: ${value}`);
    }
    if (!HEXADECIMAL_REGEX.test(value)) {
        throw mongoose.SchemaType.CastError("Hexadecimal", `Value is not a valid hexadecimal value: ${value}`);
    }
    return value;
};
class Hexadecimal extends mongoose.SchemaType {
    constructor(key, options) {
        super(key, options, "Hexadecimal");
    }
    cast(val) {
        validate(val);
        return val;
    }
}
Hexadecimal.instance = "Hexadecimal";
mongoose.Schema.Types.Hexadecimal = Hexadecimal;
exports.default = Hexadecimal;
