"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const validate = (value) => {
    const parsed = typeof value === "string" ? parseInt(value, 10) : value;
    if (typeof parsed !== "number" || Number.isNaN(parsed)) {
        throw mongoose.SchemaType.CastError("Port", `Value is not a number: ${value}`);
    }
    if (parsed === Infinity || parsed === -Infinity) {
        throw mongoose.SchemaType.CastError("Port", `Value is not a finite number: ${value}`);
    }
    if (parsed <= 0 || parsed > 65535) {
        throw mongoose.SchemaType.CastError("Port", `Value is not a valid TCP port: ${value}`);
    }
    return parsed;
};
class Port extends mongoose.SchemaType {
    constructor(key, options) {
        super(key, options, "Port");
    }
    cast(val) {
        validate(val);
        return val;
    }
}
Port.instance = "Port";
mongoose.Schema.Types.Port = Port;
exports.default = Port;
