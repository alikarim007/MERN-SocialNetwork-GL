"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const validate = (value) => {
    const EMAIL_ADDRESS_REGEX = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/;
    if (typeof value !== "string") {
        throw mongoose.SchemaType.CastError("EmailAddress", `Value is not string: ${value}`);
    }
    if (!EMAIL_ADDRESS_REGEX.test(value)) {
        throw mongoose.SchemaType.CastError("EmailAddress", `Value is not a valid email address: ${value}`);
    }
    return value;
};
class EmailAddress extends mongoose.SchemaType {
    constructor(key, options) {
        super(key, options, "EmailAddress");
    }
    cast(val) {
        validate(val);
        return val;
    }
}
EmailAddress.instance = "EmailAddress";
mongoose.Schema.Types.EmailAddress = EmailAddress;
exports.default = EmailAddress;
