"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const RGBA_REGEX = /^rgba\(\s*(-?\d+|-?\d*\.\d+(?=%))(%?)\s*,\s*(-?\d+|-?\d*\.\d+(?=%))(\2)\s*,\s*(-?\d+|-?\d*\.\d+(?=%))(\2)\s*,\s*(-?\d+|-?\d*.\d+)\s*\)$/;
const validate = (value) => {
    if (typeof value !== "string") {
        throw mongoose.SchemaType.CastError("RGBA", `Value is not string: ${value}`);
    }
    if (!RGBA_REGEX.test(value)) {
        throw mongoose.SchemaType.CastError("RGBA", `Value is not a valid RGBA color: ${value}`);
    }
    return value;
};
class RGBA extends mongoose.SchemaType {
    constructor(key, options) {
        super(key, options, "RGBA");
    }
    cast(val) {
        validate(val);
        return val;
    }
}
RGBA.instance = "RGBA";
mongoose.Schema.Types.RGBA = RGBA;
exports.default = RGBA;
